worker_processes 1;
daemon off;

pid tmp/nginx.pid;
error_log log/nginx.error.log;

events {
  worker_connections 1024; # increase if you have lots of clients
  accept_mutex off; # "on" if nginx worker_processes > 1
  # use epoll; # enable for Linux 2.6+
  # use kqueue; # enable for FreeBSD, OSX
}

http {
  default_type application/octet-stream;

  access_log log/nginx.access.log combined;

  # you generally want to serve static files with nginx since
  # unicorn is not and will never be optimized for it
  sendfile on;

  tcp_nopush on; # off may be better for *some* Comet/long-poll stuff
  tcp_nodelay off; # on may be better for some Comet/long-poll stuff

  upstream app_server {
    server 127.0.0.1:5001 fail_timeout=0;
  }

  server {
    # enable one of the following if you're on Linux or FreeBSD
    # listen 80 default deferred; # for Linux
    # listen 80 default accept_filter=httpready; # for FreeBSD
    listen 5000 default;

    client_max_body_size 4G;
    server_name _;

    keepalive_timeout 5;

    root ./public;

    types {
        text/html     html;
        image/gif     gif;
        image/jpeg    jpg;
        image/scv+xml svg;
        text/css      css;
    }

    try_files $uri/index.html $uri.html $uri @app;

    location @app {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      proxy_redirect off;

      # It's also safe to set if you're using only serving fast clients
      # with unicorn + nginx, but not slow clients.  You normally want
      # nginx to buffer responses to slow clients, even with Rails 3.1
      # streaming because otherwise a slow client can become a bottleneck
      # of unicorn.
      #
      # The Rack application may also set "X-Accel-Buffering (yes|no)"
      # in the response headers do disable/enable buffering on a
      # per-response basis.
      # proxy_buffering off;

      proxy_pass http://app_server;
      proxy_set_header X-Trace-Id $pid-$msec-$remote_addr-$request_length;
      proxy_set_header X-Trace-Start $msec;
    }

    # Rails error pages
    error_page 500 502 503 504 /500.html;
    location = /500.html {
      root ./public;
    }
  }
}
